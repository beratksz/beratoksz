@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <title>Uzay Gemisi Kontrol Merkezi - Genişletilmiş Dashboard</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" />
    <link href="https://fonts.googleapis.com/css?family=Orbitron&display=swap" rel="stylesheet">
    <style>
        body {
            background-color: #0d0d0d;
            color: #f0f0f0;
            font-family: 'Orbitron', sans-serif;
        }

        .header {
            background-color: #1a1a1a;
            padding: 20px;
            text-align: center;
            border-bottom: 2px solid #333;
        }

            .header h1 {
                font-size: 3rem;
                margin: 0;
            }

        .section {
            padding: 15px;
            background-color: #1a1a1a;
            border: 1px solid #333;
            border-radius: 10px;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>Uzay Gemisi Kontrol Merkezi - Genişletilmiş Dashboard</h1>
        <p>Tüm sistem detayları anbean izleniyor...</p>
    </div>
    <div class="container my-4">
        <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.0/signalr.min.js"></script>

        <script>
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/statusHub")
                .configureLogging(signalR.LogLevel.Information)
                .build();

            async function startSignalR() {
                try {
                    await connection.start();
                    console.log("✅ SignalR bağlantısı başarılı:", connection.state);
                } catch (err) {
                    console.error("❌ SignalR bağlantı hatası:", err);
                    setTimeout(startSignalR, 5000); // 5 saniye sonra tekrar dene
                }
            }

            connection.on("UpdatePerformanceMetrics", function(data) {
                console.log("📡 SignalR Verisi Geldi:", data);

                // Gelen veriyi doğrula ve eksik alanları kontrol et
                if (!data || !data.systemMetrics || !data.requestMetrics) {
                    console.error("❌ HATA: Eksik veri geldi!", data);
                    return;
                }

                // JSON içindeki değerleri güncelle
                document.getElementById("cpuUsage").innerText = data.systemMetrics.cpuUsage || "Bilinmiyor";
                document.getElementById("memoryUsage").innerText = data.systemMetrics.memoryUsage || "Bilinmiyor";
                document.getElementById("uptime").innerText = data.systemMetrics.uptime || "Bilinmiyor";
                document.getElementById("requestCount").innerText = data.requestMetrics.requestCount || "0";
                document.getElementById("avgResponseTime").innerText = data.requestMetrics.avgResponseTime || "0 ms";
                document.getElementById("minResponseTime").innerText = data.requestMetrics.minResponseTime || "0 ms";
                document.getElementById("maxResponseTime").innerText = data.requestMetrics.maxResponseTime || "0 ms";
            });

            startSignalR();
        </script>

        <!-- Dashboard UI -->
        <div class="dashboard">
            <h2>Performans Durumu</h2>
            <p>🖥 CPU Kullanımı: <span id="cpuUsage">-</span></p>
            <p>💾 Bellek Kullanımı: <span id="memoryUsage">-</span></p>
            <p>⏳ Uptime: <span id="uptime">-</span></p>
            <p>🌐 Toplam HTTP İstekleri: <span id="requestCount">-</span></p>
            <p>⚡ Ortalama Yanıt Süresi: <span id="avgResponseTime">-</span></p>
            <p>🚀 En Hızlı Yanıt Süresi: <span id="minResponseTime">-</span></p>
            <p>🐢 En Yavaş Yanıt Süresi: <span id="maxResponseTime">-</span></p>
        </div>

    </div>
</body>
</html>
