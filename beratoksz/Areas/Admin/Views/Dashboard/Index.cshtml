<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Kurumsal Sistem İzleme Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="~/css/Dashboard.css" />
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark py-3">
        <div class="container">
            <a class="navbar-brand" href="#systemwatch">💻 Sistem İzleme</a>
            <a class="navbar-brand" href="#watchusers">👥 Kullanıcı Aktiviteleri</a>
            <a class="navbar-brand" href="#usersecurity">🔒 Hesap Güvenliği</a>
            <a class="navbar-brand" href="#topgraphwatch">📈 Genel Grafik İzleme</a>

        </div>
    </nav>

    <div class="container py-4" id="systemwatch">
        <div class="row">
            <div class="col-md-4 mb-3">
                <div class="card">
                    <div class="card-header">CPU Kullanımı</div>
                    <div class="card-body text-center">
                        <span id="cpuUsage" class="fs-4">-</span>%
                    </div>
                </div>
            </div>
            <div class="col-md-4 mb-3">
                <div class="card">
                    <div class="card-header">Bellek Kullanımı</div>
                    <div class="card-body text-center">
                        <span id="memoryUsage" class="fs-4">-</span>
                    </div>
                </div>
            </div>
            <div class="col-md-4 mb-3">
                <div class="card">
                    <div class="card-header">Çalışma Süresi (Uptime)</div>
                    <div class="card-body text-center">
                        <span id="uptime" class="fs-4">-</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <canvas id="cpuChart"></canvas>
            </div>
            <div class="col-md-6">
                <canvas id="memoryChart"></canvas>
            </div>
        </div>

        <div class="dashboard" id="watchusers">
            <h2>Gerçek Zamanlı Sistem Durumu</h2>
            <p>👥 Anlık Aktif Kullanıcı Sayısı: <span id="activeUsers">0</span></p>
        </div>

        <div class="card mb-3">
            <div class="card-header">Son Kullanıcı Aktiviteleri</div>
            <div class="card-body table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Kullanıcı</th>
                            <th>IP</th>
                            <th>Ülke</th>
                            <th>Şehir</th>
                            <th>Bölge</th>
                            <th>Sayfa</th>
                            <th>Ziyaret Zamanı</th>
                        </tr>
                    </thead>
                    <tbody id="geoActivityLog">
                        <tr><td colspan="3">Yükleniyor...</td></tr>
                    </tbody>
                </table>
            </div>
        </div>

        <div class="card mb-3" id="usersecurity">
            <div class="card-header">🔐 Hesap Güvenliği Özeti</div>
            <div class="card-body table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Etkinlik Türü</th>
                            <th>IP Adresi</th>
                            <th>Cihaz Bilgisi</th>
                            <th>Tarih ve Saat</th>
                            <th>Başarı Durumu</th>
                        </tr>
                    </thead>
                    <tbody id="activityTableBody">
                        <tr><td colspan="3" class="text-center">Yükleniyor...</td></tr>
                    </tbody>

                </table>
            </div>
        </div>

        <div class="row mb-4" id="topgraphwatch">
            <div class="col-md-6">
                <h3>En Çok Ziyaret Edilen Sayfalar</h3>
                <canvas id="topPagesChart"></canvas>
            </div>
            <div class="col-md-6">
                <h3>Tarayıcı Kullanım Oranları</h3>
                <canvas id="browserChart"></canvas>
            </div>
        </div>

    </div>

    <footer class="footer py-3 text-center">
        <div class="container">Dashboard</div>
    </footer>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.0/signalr.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder().withUrl("/statusHub").build();
        connection.start().catch(err => console.error(err));

        connection.on("UpdateActiveUsers", function(activeUserCount) {
            document.getElementById("activeUsers").innerText = activeUserCount;
        });

        // Bağlantı sağlandıktan hemen sonra mevcut aktif kullanıcı sayısını isteyelim
        connection.start().then(() => {
            connection.invoke("GetActiveUserCount");
        });

        connection.on("UpdatePerformanceMetrics", data => {
            document.getElementById("cpuUsage").innerText = data.systemMetrics.cpuUsage;
            document.getElementById("memoryUsage").innerText = data.systemMetrics.memoryUsage;
            document.getElementById("uptime").innerText = data.systemMetrics.uptime;
        });

        setInterval(async () => {
            const res = await fetch("/api/activitylog");
            const logs = await res.json();
            const tbody = document.getElementById("activityLog");
            tbody.innerHTML = logs.map(log => `<tr><td>${log.userName}</td><td>${log.page}</td><td>${new Date(log.timestamp).toLocaleString()}</td></tr>`).join("");
        }, 5000);

        async function fetchChart(url, chartId, type, label) {
            const res = await fetch(url);
            const data = await res.json();
            new Chart(document.getElementById(chartId), {
                type,
                data: {
                    labels: data.map(d => d.page || d.browser),
                    datasets: [{ label, data: data.map(d => d.count), backgroundColor: ["#007bff", "#28a745", "#ffc107"] }]
                }
            });
        }
            const cpuCtx = document.getElementById('cpuChart').getContext('2d');
        const memoryCtx = document.getElementById('memoryChart').getContext('2d');

        const cpuChart = new Chart(cpuCtx, {
            type: 'line',
            data: { labels: [], datasets: [{ label: 'CPU Kullanımı (%)', data: [], borderColor: '#dc3545', borderWidth: 2 }] },
            options: { responsive: true, scales: { y: { beginAtZero: true, max: 100 } } }
        });

        const memoryChart = new Chart(memoryCtx, {
            type: 'line',
            data: { labels: [], datasets: [{ label: 'RAM Kullanımı (MB)', data: [], borderColor: '#007bff', borderWidth: 2 }] },
            options: { responsive: true, scales: { y: { beginAtZero: true } } }
        });

        connection.on("UpdatePerformanceMetrics", data => {
            const timestamp = new Date().toLocaleTimeString();

            cpuChart.data.labels.push(timestamp);
            cpuChart.data.datasets[0].data.push(parseFloat(data.systemMetrics.cpuUsage));

            memoryChart.data.labels.push(timestamp);
            memoryChart.data.datasets[0].data.push(parseFloat(data.systemMetrics.memoryUsage));

            if (cpuChart.data.labels.length > 15) cpuChart.data.labels.shift();
            if (cpuChart.data.datasets[0].data.length > 15) cpuChart.data.datasets[0].data.shift();

            if (memoryChart.data.labels.length > 15) memoryChart.data.labels.shift();
            if (memoryChart.data.datasets[0].data.length > 15) memoryChart.data.datasets[0].data.shift();

            cpuChart.update();
            memoryChart.update();
        });

                function loadGeoActivityLog() {
            fetch("/api/activitylog")
                .then(response => response.json())
                .then(data => {
                    let tableBody = document.getElementById("geoActivityLog");
                    tableBody.innerHTML = "";
                    data.forEach(log => {
                        let row = `<tr>
                            <td>${log.userName}</td>
                            <td>${log.ipAddress}</td>
                            <td>${log.country}</td>
                            <td>${log.city}</td>
                            <td>${log.region}</td>
                            <td>${log.page}</td>
                            <td>${new Date(log.timestamp).toLocaleString()}</td>
                        </tr>`;
                        tableBody.innerHTML += row;
                    });
                });
        }

        setInterval(loadGeoActivityLog, 5000);


             async function loadUserSecurityActivities() {
            const response = await fetch('/api/activities/activities');
            if (!response.ok) {
                console.error('Etkinlik verileri alınamadı.');
                return;
            }

            const activities = await response.json();
            const tableBody = document.getElementById("activityTableBody");

            tableBody.innerHTML = activities.map(activity => `
                <tr>
                    <td>${activity.activityType}</td>
                    <td>${activity.ipAddress}</td>
                    <td>${activity.deviceInfo}</td>
                    <td>${new Date(activity.timestamp).toLocaleString()}</td>
                    <td>
                        ${activity.isSuccess ?
                            '<span class="badge bg-success">Başarılı</span>' :
                            '<span class="badge bg-danger">Başarısız</span>'}
                    </td>
                </tr>
            `).join('');
        }

        // Sayfa yüklendiğinde otomatik yükle
        document.addEventListener("DOMContentLoaded", loadUserSecurityActivities);

        fetchChart('/api/adminanalytics/top-pages', 'topPagesChart', 'bar', 'Ziyaret Sayısı');
        fetchChart('/api/adminanalytics/browsers', 'browserChart', 'pie', 'Tarayıcı Kullanımı');
    </script>
</body>
</html>