@model beratoksz.Models.SettingsViewModel
@{
    ViewData["Title"] = "Site Ayarları";
}

<h2>Site Ayarları</h2>

<style>
    .active-setting {
        font-weight: bold;
        color: green;
    }

    .inactive-setting {
        color: red;
    }
</style>


@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}

<div class="row">
    <div class="col-md-4">
        <label for="settingsSelect">Mevcut Ayarlar</label>
        <select id="settingsSelect" class="form-control" onchange="onSettingsSelectChange()">
            <option value="">-- Yeni Kayıt --</option>
            @foreach (var s in Model.SettingsList)
            {
                <option value="@s.Id" selected="@(s.Id == Model.CurrentSettings.Id)" class="@(s.IsActive ? "active-setting" : "inactive-setting")">
                    @($"ID: {s.Id} | EmailVerif: {s.EnableEmailVerification} | 2FA: {s.EnableTwoFactorAuthentication} | Aktif: {(s.IsActive ? "Evet" : "Hayır")}")
                </option>


            }
        </select>
    </div>
</div>

<hr />

<form asp-action="Save" method="post">
    <input type="hidden" asp-for="CurrentSettings.Id" />

    <div class="form-check">
        <input asp-for="CurrentSettings.EnableEmailVerification" class="form-check-input" type="checkbox" />
        <label asp-for="CurrentSettings.EnableEmailVerification" class="form-check-label">E-posta Doğrulamasını Etkinleştir</label>
    </div>

    <div class="form-check">
        <input asp-for="CurrentSettings.EnableTwoFactorAuthentication" class="form-check-input" type="checkbox" />
        <label asp-for="CurrentSettings.EnableTwoFactorAuthentication" class="form-check-label">İki Faktörlü Kimlik Doğrulamayı Etkinleştir</label>
    </div>

    <hr />

    <div class="form-group">
        <label asp-for="CurrentSettings.SmtpHost"></label>
        <input asp-for="CurrentSettings.SmtpHost" class="form-control" required />
    </div>

    <div class="form-group">
        <label asp-for="CurrentSettings.SmtpPort"></label>
        <input asp-for="CurrentSettings.SmtpPort" class="form-control" type="number" required />
    </div>

    <div class="form-group">
        <label asp-for="CurrentSettings.SmtpUsername"></label>
        <input asp-for="CurrentSettings.SmtpUsername" class="form-control" required />
    </div>

    <div class="form-group">
        <label asp-for="CurrentSettings.SmtpPassword"></label>
        <input asp-for="CurrentSettings.SmtpPassword" class="form-control" type="password" required />
    </div>

    <div class="form-group">
        <label asp-for="CurrentSettings.EmailFromAddress"></label>
        <input asp-for="CurrentSettings.EmailFromAddress" class="form-control" required />
    </div>

    <div class="form-group">
        <label asp-for="CurrentSettings.EmailFromName"></label>
        <input asp-for="CurrentSettings.EmailFromName" class="form-control" required />
    </div>

    <div class="form-group">
        <label asp-for="CurrentSettings.EmailVerificationTemplate"></label>
        <textarea asp-for="CurrentSettings.EmailVerificationTemplate" class="form-control" rows="5" required></textarea>
    </div>

    <div class="form-group">
        <label asp-for="CurrentSettings.TwoFactorEmailTemplate"></label>
        <textarea asp-for="CurrentSettings.TwoFactorEmailTemplate" class="form-control" rows="5" required></textarea>
    </div>

    <div class="form-group">
        <label asp-for="CurrentSettings.PasswordResetEmailTemplate"></label>
        <textarea asp-for="CurrentSettings.PasswordResetEmailTemplate" class="form-control" rows="5" required></textarea>
    </div>

    <button type="submit" class="btn btn-primary mt-3">Kaydet</button>

    @if (Model.CurrentSettings.Id > 0)
    {
        <button type="button" class="btn btn-success mt-3" onclick="activateSettings(@Model.CurrentSettings.Id)">Aktifleştir</button>
        <button type="button" class="btn btn-danger mt-3" onclick="deleteSettings(@Model.CurrentSettings.Id)">Sil</button>
    }
</form>

@section Scripts {
    <script>
        function onSettingsSelectChange() {
             var id = document.getElementById("settingsSelect").value;
             window.location.href = '@Url.Action("Index", "Settings", new { area = "Admin" })' + (id ? '?id=' + id : '');
         }

        function activateSettings(id) {
            if (confirm("Bu ayarı aktifleştirmek istediğinize emin misiniz?")) {
                var form = document.createElement("form");
                form.method = "post";
                form.action = '@Url.Action("Activate", "Settings", new { area = "Admin" })';

                var input = document.createElement("input");
                input.type = "hidden";
                input.name = "id";
                input.value = id;
                form.appendChild(input);

                var antiForgery = document.querySelector('input[name="__RequestVerificationToken"]');
                if (antiForgery) {
                    var token = document.createElement("input");
                    token.type = "hidden";
                    token.name = "__RequestVerificationToken";
                    token.value = antiForgery.value;
                    form.appendChild(token);
                }

                document.body.appendChild(form);
                form.submit();
            }
        }

        function deleteSettings(id) {
            if (confirm("Bu ayar kaydını silmek istediğinize emin misiniz?")) {
                var form = document.createElement("form");
                form.method = "post";
                form.action = '@Url.Action("Delete", "Settings", new { area = "Admin" })';

                var input = document.createElement("input");
                input.type = "hidden";
                input.name = "id";
                input.value = id;
                form.appendChild(input);

                var antiForgery = document.querySelector('input[name="__RequestVerificationToken"]');
                if (antiForgery) {
                    var token = document.createElement("input");
                    token.type = "hidden";
                    token.name = "__RequestVerificationToken";
                    token.value = antiForgery.value;
                    form.appendChild(token);
                }

                document.body.appendChild(form);
                form.submit();
            }
        }
    </script>
}