@{
    ViewData["Title"] = "Admin Paneli";
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet" />
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            background-color: #eef2f7;
        }

        .card {
            border: none;
            border-radius: 12px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s;
        }

            .card:hover {
                transform: translateY(-8px);
            }

        .card-title {
            color: #0056b3;
            font-weight: bold;
        }

        .btn-primary {
            background-color: #0056b3;
            border: none;
        }

            .btn-primary:hover {
                background-color: #003d80;
            }
    </style>
</head>
<body>

    <div class="container py-5">
        <h1 class="text-center mb-4">Admin Paneline Hoşgeldiniz</h1>
        <hr>

        <div class="row justify-content-center">
            <div class="col-md-5 mb-4">
                <div class="card">
                    <div class="card-body text-center">
                        <h5 class="card-title">👥 Kullanıcı Yönetimi</h5>
                        <p class="card-text">Kullanıcı hesaplarını yönetin, roller atayın ve izinleri düzenleyin.</p>
                        <a href="/Admin/UserManagement/Index" class="btn btn-primary">Yönet</a>
                    </div>
                </div>
            </div>
            <div class="col-md-5 mb-4">
                <div class="card">
                    <div class="card-body text-center">
                        <h5 class="card-title">🎭 Rol Yönetimi</h5>
                        <p class="card-text">Rolleri yönetin, roller oluşturun.</p>
                        <a href="/Admin/Role/Index" class="btn btn-primary">Yönet</a>
                    </div>
                </div>
            </div>
            <div class="col-md-5 mb-4">
                <div class="card">
                    <div class="card-body text-center">
                        <h5 class="card-title">🔒 Kullanıcı Rol Yönetimi</h5>
                        <p class="card-text">Kullanıcı rollerini yönetin, roller atayın ve izinleri düzenleyin.</p>
                        <a href="/Admin/UserRole/Manage" class="btn btn-primary">Yönet</a>
                    </div>
                </div>
            </div>
            <div class="col-md-5 mb-4">
                <div class="card">
                    <div class="card-body text-center">
                        <h5 class="card-title">📊 Raporlar</h5>
                        <p class="card-text">Sistem performansı ve kullanıcı aktiviteleri hakkında raporlar alın.</p>
                        <a href="/Admin/Dashboard/Index" class="btn btn-primary">Yönet</a>
                    </div>
                </div>
            </div>
        </div>


        <!-- Performans Bilgileri -->
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card text-center">
                    <div class="card-body">
                        <h5 class="card-title">⚙️ Sistem Durumu</h5>
                        <p>CPU Kullanımı: <strong id="cpuUsage">-</strong>%</p>
                        <p>Bellek Kullanımı: <strong id="memoryUsage">-</strong> MB</p>
                        <p>Çalışma Süresi: <strong id="uptime">-</strong></p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.0/signalr.min.js"></script>
    <script>
        // SignalR bağlantısını başlat
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/statusHub")
            .configureLogging(signalR.LogLevel.Information)
            .withAutomaticReconnect() // Otomatik tekrar bağlanmayı etkinleştir
            .build();

        // Sayfadaki DOM elemanlarını bir kez seç
        const cpuUsageElement = document.getElementById("cpuUsage");
        const memoryUsageElement = document.getElementById("memoryUsage");
        const uptimeElement = document.getElementById("uptime");

        async function startSignalR() {
            try {
                if (connection.state !== signalR.HubConnectionState.Disconnected) {
                    console.warn("⚠ SignalR zaten bağlı veya bağlanmaya çalışıyor.");
                    return;
                }

                await connection.start();
                console.log("✅ SignalR bağlantısı başlatıldı!");
            } catch (err) {
                console.error("❌ SignalR bağlantısı başlatılamadı:", err);
                setTimeout(startSignalR, 5000); // 5 saniye sonra tekrar dene
            }
        }

        // SignalR bağlantı kapandığında otomatik yeniden bağlanacak
        connection.onreconnecting(error => {
            console.warn("⚠ SignalR bağlantısı yeniden kurulmaya çalışılıyor...", error);
        });

        connection.onreconnected(() => {
            console.log("✅ SignalR bağlantısı yeniden kuruldu!");
        });

        connection.on("UpdatePerformanceMetrics", function (data) {
            if (!cpuUsageElement || !memoryUsageElement || !uptimeElement) {
                console.warn("⚠ Güncellenecek DOM elemanları bulunamadı!");
                return;
            }

            // Gelen verileri DOM'a yansıt
            cpuUsageElement.innerText = data.systemMetrics.cpuUsage ?? "-";
            memoryUsageElement.innerText = data.systemMetrics.memoryUsage ?? "-";
            uptimeElement.innerText = data.systemMetrics.uptime ?? "-";
        });

        // Sayfa tamamen yüklendiğinde SignalR başlat
        document.addEventListener("DOMContentLoaded", startSignalR);

        // Sayfa kapanırken bağlantıyı düzgün şekilde durdur
        window.addEventListener("beforeunload", () => {
            if (connection.state === signalR.HubConnectionState.Connected) {
                connection.stop();
                console.log("🔌 SignalR bağlantısı kapatıldı.");
            }
        });

    </script>
</body>
</html>
