@using Microsoft.AspNetCore.Identity
@model IEnumerable<IdentityRole>

@{
    ViewData["Title"] = "Rol Yönetimi";
}

<script src="/js/roles.js"></script>
<script src="/js/permissions.js"></script>

<div class="container-fluid mt-4">
    <h1 class="mb-4">Rol Yönetimi</h1>

    <div id="alert-container"></div>

    <!-- Arama Kutusu -->
    <input type="text" id="roleFilterInput" class="form-control mb-3" placeholder="ID veya Rol Adı Ara..." onkeyup="filterRoles()">

    <button class="btn btn-success mb-3" onclick="showAddRoleModal()">Yeni Rol Ekle</button>

    <div class="table-responsive">
        <table class="table table-hover table-bordered">
            <thead class="table-dark">
                <tr>
                    <th>ID</th>
                    <th>Rol Adı</th>
                    <th>İşlemler</th>
                </tr>
            </thead>
            <tbody id="roleTableBody"></tbody>
        </table>
    </div>
</div>


<!-- ✅ Yeni Rol Ekle Modal -->
<div id="roleModal" class="modal fade" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Rol Ekle / Düzenle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="roleId">
                <label for="roleName">Rol Adı:</label>
                <input type="text" id="roleName" class="form-control" required />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-primary" onclick="saveRole()">Kaydet</button>
            </div>
        </div>
    </div>
</div>

<!-- ✅ Yetkilendirme Yönetimi -->
<div class="container-fluid mt-4">
    <h1 class="mb-4">Rol Yetkilendirme Yönetimi</h1>

    <!-- Arama Kutusu -->
    <input type="text" id="filterInput" class="form-control mb-3" placeholder="Rol veya Sayfa Ara..." onkeyup="filterTable()">

    <button class="btn btn-primary mb-3" onclick="showAddPermissionModal()">Yeni Yetki Ekle</button>

    <div class="table-responsive">
        <table class="table table-hover table-bordered">
            <thead class="table-dark">
                <tr>
                    <th>Rol</th>
                    <th>Sayfa</th>
                    <th>Erişim</th>
                    <th>İşlemler</th>
                </tr>
            </thead>
            <tbody id="rolePermissionTable"></tbody>
        </table>
    </div>
</div>


<!-- ✅ Yeni Yetki Ekle Modal -->
<div id="addPermissionModal" class="modal fade" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Yeni Yetki Ekle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <label>Rol Seç:</label>
                <select id="roleNameSelect" class="form-control"></select>

                <label>Sayfa Seç:</label>
                <select id="pagePathSelect" class="form-control"></select>

                <label>Erişim:</label>
                <select id="canAccessSelect" class="form-control">
                    <option value="true">Evet</option>
                    <option value="false">Hayır</option>
                </select>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-primary" onclick="addPermission()">Kaydet</button>
            </div>
        </div>
    </div>
</div>

<script>
    // ✅ Roller tablosunu API'den çekip listeye ekleme
    async function loadRoles() {
        let res = await fetch("/api/roles");
        let roles = await res.json();
        let tbody = document.getElementById("roleTableBody");
        tbody.innerHTML = roles.map(role => `
            <tr>
                <td>${role.id}</td>
                <td>${role.name}</td>
                <td>
                    <button class="btn btn-warning btn-sm" onclick="editRole('${role.id}', '${role.name}')">Düzenle</button>
                    <button class="btn btn-danger btn-sm" onclick="deleteRole('${role.id}')">Sil</button>
                </td>
            </tr>
        `).join("");
    }

    // ✅ Yetkilendirme tablosunu API'den çekip listeye ekleme
        async function loadPermissions() {
        let res = await fetch("/api/role-permissions");
        let permissions = await res.json();
        let tbody = document.getElementById("rolePermissionTable");

        tbody.innerHTML = permissions.map(p => `
            <tr data-id="${p.id}">
                <td class="role-name">${p.roleName}</td>
                <td class="page-path">${p.pagePath}</td>
                <td>
                    <input type="checkbox" ${p.canAccess ? "checked" : ""}
                           onchange="togglePermission('${p.id}', this.checked)">
                </td>
                <td>
                    <button class="btn btn-danger btn-sm" onclick="deletePermission('${p.id}')">Sil</button>
                </td>
            </tr>
        `).join("");
    }

        async function togglePermission(id, canAccess) {
        let row = document.querySelector(`#rolePermissionTable tr[data-id='${id}']`);
        let roleName = row.querySelector(".role-name").innerText;
        let pagePath = row.querySelector(".page-path").innerText;

        if (!pagePath) {
            alert("Sayfa yolu boş bırakılamaz!");
            loadPermissions();
            return;
        }

        let bodyData = JSON.stringify({
            roleName: roleName,
            pagePath: pagePath,
            canAccess: canAccess
        });

        let response = await fetch(`/api/role-permissions/${id}`, {
            method: "PUT",
            headers: { "Content-Type": "application/json" },
            body: bodyData
        });

        if (response.ok) {
            loadPermissions(); // Güncellenmiş listeyi tekrar yükle
        } else {
            alert("Yetkilendirme güncellenirken hata oluştu.");
        }
    }


        async function deletePermission(id) {
        let confirmDelete = confirm("Bu yetkiyi silmek istediğinize emin misiniz?");
        if (!confirmDelete) return;

        try {
            let response = await fetch(`/api/role-permissions/${id}`, { method: "DELETE" });

            if (!response.ok) {
                let errorText = await response.text();
                throw new Error(`Silme başarısız: ${errorText}`);
            }

            alert("Yetki başarıyla silindi.");
            loadPermissions(); // Güncellenmiş listeyi tekrar yükle
        } catch (error) {
            console.error("Yetki silme hatası:", error);
            alert("Yetki silinirken bir hata oluştu.");
        }
    }



    // ✅ Tablo Filtreleme (Hata giderildi)
    function filterTable() {
        let input = document.getElementById("filterInput").value.toLowerCase();
        let rows = document.querySelectorAll("#rolePermissionTable tr");

        rows.forEach(row => {
            let cells = row.querySelectorAll("td");
            let role = cells[0]?.innerText.toLowerCase();
            let page = cells[1]?.innerText.toLowerCase();

            row.style.display = (role.includes(input) || page.includes(input)) ? "" : "none";
        });
    }

    function filterRoles() {
        let input = document.getElementById("roleFilterInput").value.toLowerCase();
        let rows = document.querySelectorAll("#roleTableBody tr");

        rows.forEach(row => {
            let cells = row.querySelectorAll("td");
            let roleId = cells[0]?.innerText.toLowerCase();
            let roleName = cells[1]?.innerText.toLowerCase();

            row.style.display = (roleId.includes(input) || roleName.includes(input)) ? "" : "none";
        });
    }

    document.addEventListener("DOMContentLoaded", () => {
        loadRoles();
        loadPermissions();
    });

</script>
